//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Inserting(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Inserted(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Updating(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Updated(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Deleting(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Deleted(global::LightSwitchApplication.Course entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Validate(global::LightSwitchApplication.Course entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Courses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Course, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseStatuses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseStatuses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseStatuses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseStatuses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseStatuses_Inserting(global::LightSwitchApplication.CourseStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseStatuses_Inserted(global::LightSwitchApplication.CourseStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseStatuses_Updating(global::LightSwitchApplication.CourseStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseStatuses_Updated(global::LightSwitchApplication.CourseStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseStatuses_Deleting(global::LightSwitchApplication.CourseStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseStatuses_Deleted(global::LightSwitchApplication.CourseStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseStatuses_Validate(global::LightSwitchApplication.CourseStatus entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CourseStatuses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CourseStatus, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeCourseAssignments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeCourseAssignments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeCourseAssignments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeCourseAssignments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeCourseAssignments_Inserting(global::LightSwitchApplication.EmployeeCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeCourseAssignments_Inserted(global::LightSwitchApplication.EmployeeCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeCourseAssignments_Updating(global::LightSwitchApplication.EmployeeCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeCourseAssignments_Updated(global::LightSwitchApplication.EmployeeCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeCourseAssignments_Deleting(global::LightSwitchApplication.EmployeeCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeCourseAssignments_Deleted(global::LightSwitchApplication.EmployeeCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeCourseAssignments_Validate(global::LightSwitchApplication.EmployeeCourseAssignment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeCourseAssignments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeCourseAssignment, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroupCourseAssignments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroupCourseAssignments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroupCourseAssignments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroupCourseAssignments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroupCourseAssignments_Inserting(global::LightSwitchApplication.EmployeeGroupCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroupCourseAssignments_Inserted(global::LightSwitchApplication.EmployeeGroupCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroupCourseAssignments_Updating(global::LightSwitchApplication.EmployeeGroupCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroupCourseAssignments_Updated(global::LightSwitchApplication.EmployeeGroupCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroupCourseAssignments_Deleting(global::LightSwitchApplication.EmployeeGroupCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroupCourseAssignments_Deleted(global::LightSwitchApplication.EmployeeGroupCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroupCourseAssignments_Validate(global::LightSwitchApplication.EmployeeGroupCourseAssignment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroupCourseAssignments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeGroupCourseAssignment, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroups_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroups_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroups_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroups_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroups_Inserting(global::LightSwitchApplication.EmployeeGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroups_Inserted(global::LightSwitchApplication.EmployeeGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroups_Updating(global::LightSwitchApplication.EmployeeGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroups_Updated(global::LightSwitchApplication.EmployeeGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroups_Deleting(global::LightSwitchApplication.EmployeeGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroups_Deleted(global::LightSwitchApplication.EmployeeGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroups_Validate(global::LightSwitchApplication.EmployeeGroup entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeGroups_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeGroup, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeJobRoles_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeJobRoles_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeJobRoles_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeJobRoles_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeJobRoles_Inserting(global::LightSwitchApplication.EmployeeJobRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeJobRoles_Inserted(global::LightSwitchApplication.EmployeeJobRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeJobRoles_Updating(global::LightSwitchApplication.EmployeeJobRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeJobRoles_Updated(global::LightSwitchApplication.EmployeeJobRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeJobRoles_Deleting(global::LightSwitchApplication.EmployeeJobRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeJobRoles_Deleted(global::LightSwitchApplication.EmployeeJobRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeJobRoles_Validate(global::LightSwitchApplication.EmployeeJobRole entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeJobRoles_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeJobRole, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updating(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updated(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::LightSwitchApplication.Employee entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTrainingRecords_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTrainingRecords_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTrainingRecords_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTrainingRecords_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTrainingRecords_Inserting(global::LightSwitchApplication.EmployeeTrainingRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTrainingRecords_Inserted(global::LightSwitchApplication.EmployeeTrainingRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTrainingRecords_Updating(global::LightSwitchApplication.EmployeeTrainingRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTrainingRecords_Updated(global::LightSwitchApplication.EmployeeTrainingRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTrainingRecords_Deleting(global::LightSwitchApplication.EmployeeTrainingRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTrainingRecords_Deleted(global::LightSwitchApplication.EmployeeTrainingRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTrainingRecords_Validate(global::LightSwitchApplication.EmployeeTrainingRecord entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTrainingRecords_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeTrainingRecord, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoleCourseAssignments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoleCourseAssignments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoleCourseAssignments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoleCourseAssignments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoleCourseAssignments_Inserting(global::LightSwitchApplication.JobRoleCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoleCourseAssignments_Inserted(global::LightSwitchApplication.JobRoleCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoleCourseAssignments_Updating(global::LightSwitchApplication.JobRoleCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoleCourseAssignments_Updated(global::LightSwitchApplication.JobRoleCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoleCourseAssignments_Deleting(global::LightSwitchApplication.JobRoleCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoleCourseAssignments_Deleted(global::LightSwitchApplication.JobRoleCourseAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoleCourseAssignments_Validate(global::LightSwitchApplication.JobRoleCourseAssignment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoleCourseAssignments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobRoleCourseAssignment, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoles_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoles_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoles_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoles_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoles_Inserting(global::LightSwitchApplication.JobRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoles_Inserted(global::LightSwitchApplication.JobRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoles_Updating(global::LightSwitchApplication.JobRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoles_Updated(global::LightSwitchApplication.JobRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoles_Deleting(global::LightSwitchApplication.JobRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoles_Deleted(global::LightSwitchApplication.JobRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoles_Validate(global::LightSwitchApplication.JobRole entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobRoles_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobRole, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessionAttendees_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessionAttendees_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessionAttendees_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessionAttendees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessionAttendees_Inserting(global::LightSwitchApplication.TrainingSessionAttendee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessionAttendees_Inserted(global::LightSwitchApplication.TrainingSessionAttendee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessionAttendees_Updating(global::LightSwitchApplication.TrainingSessionAttendee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessionAttendees_Updated(global::LightSwitchApplication.TrainingSessionAttendee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessionAttendees_Deleting(global::LightSwitchApplication.TrainingSessionAttendee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessionAttendees_Deleted(global::LightSwitchApplication.TrainingSessionAttendee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessionAttendees_Validate(global::LightSwitchApplication.TrainingSessionAttendee entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessionAttendees_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TrainingSessionAttendee, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessions_Inserting(global::LightSwitchApplication.TrainingSession entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessions_Inserted(global::LightSwitchApplication.TrainingSession entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessions_Updating(global::LightSwitchApplication.TrainingSession entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessions_Updated(global::LightSwitchApplication.TrainingSession entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessions_Deleting(global::LightSwitchApplication.TrainingSession entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessions_Deleted(global::LightSwitchApplication.TrainingSession entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessions_Validate(global::LightSwitchApplication.TrainingSession entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingSessions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TrainingSession, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyCourses_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyCourses_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyCourses_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Course> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyCourses_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Course> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyCourses_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyTrainingRecords_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyTrainingRecords_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyTrainingRecords_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeTrainingRecord> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyTrainingRecords_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EmployeeTrainingRecord> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyTrainingRecords_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>
                __CoursesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>(
                    "Courses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Courses_Filter);
            private static bool __Courses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Courses_CanInsert(ref result);
                return result;
            }
            private static bool __Courses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Courses_CanUpdate(ref result);
                return result;
            }
            private static bool __Courses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Courses_CanDelete(ref result);
                return result;
            }
            private static bool __Courses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Courses_CanRead(ref result);
                return result;
            }
            private static void __Courses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Inserting(e);
            }
            private static void __Courses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Inserted(e);
            }
            private static void __Courses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Updating(e);
            }
            private static void __Courses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Updated(e);
            }
            private static void __Courses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Deleting(e);
            }
            private static void __Courses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e)
            {
                d.Courses_Deleted(e);
            }
            private static void __Courses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Course e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Courses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Course, bool>> __Courses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Course, bool>> filter = null;
                d.Courses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CourseStatus>
                __CourseStatusesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CourseStatus>(
                    "CourseStatuses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseStatuses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseStatuses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseStatuses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseStatuses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseStatuses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseStatuses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseStatuses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseStatuses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseStatuses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseStatuses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseStatuses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CourseStatuses_Filter);
            private static bool __CourseStatuses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CourseStatuses_CanInsert(ref result);
                return result;
            }
            private static bool __CourseStatuses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CourseStatuses_CanUpdate(ref result);
                return result;
            }
            private static bool __CourseStatuses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CourseStatuses_CanDelete(ref result);
                return result;
            }
            private static bool __CourseStatuses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CourseStatuses_CanRead(ref result);
                return result;
            }
            private static void __CourseStatuses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseStatus e)
            {
                d.CourseStatuses_Inserting(e);
            }
            private static void __CourseStatuses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseStatus e)
            {
                d.CourseStatuses_Inserted(e);
            }
            private static void __CourseStatuses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseStatus e)
            {
                d.CourseStatuses_Updating(e);
            }
            private static void __CourseStatuses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseStatus e)
            {
                d.CourseStatuses_Updated(e);
            }
            private static void __CourseStatuses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseStatus e)
            {
                d.CourseStatuses_Deleting(e);
            }
            private static void __CourseStatuses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseStatus e)
            {
                d.CourseStatuses_Deleted(e);
            }
            private static void __CourseStatuses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CourseStatus e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CourseStatuses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CourseStatus, bool>> __CourseStatuses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CourseStatus, bool>> filter = null;
                d.CourseStatuses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeCourseAssignment>
                __EmployeeCourseAssignmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeCourseAssignment>(
                    "EmployeeCourseAssignments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeCourseAssignments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeCourseAssignments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeCourseAssignments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeCourseAssignments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeCourseAssignments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeCourseAssignments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeCourseAssignments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeCourseAssignments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeCourseAssignments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeCourseAssignments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeCourseAssignments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeCourseAssignments_Filter);
            private static bool __EmployeeCourseAssignments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeCourseAssignments_CanInsert(ref result);
                return result;
            }
            private static bool __EmployeeCourseAssignments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeCourseAssignments_CanUpdate(ref result);
                return result;
            }
            private static bool __EmployeeCourseAssignments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeCourseAssignments_CanDelete(ref result);
                return result;
            }
            private static bool __EmployeeCourseAssignments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeCourseAssignments_CanRead(ref result);
                return result;
            }
            private static void __EmployeeCourseAssignments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeCourseAssignment e)
            {
                d.EmployeeCourseAssignments_Inserting(e);
            }
            private static void __EmployeeCourseAssignments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeCourseAssignment e)
            {
                d.EmployeeCourseAssignments_Inserted(e);
            }
            private static void __EmployeeCourseAssignments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeCourseAssignment e)
            {
                d.EmployeeCourseAssignments_Updating(e);
            }
            private static void __EmployeeCourseAssignments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeCourseAssignment e)
            {
                d.EmployeeCourseAssignments_Updated(e);
            }
            private static void __EmployeeCourseAssignments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeCourseAssignment e)
            {
                d.EmployeeCourseAssignments_Deleting(e);
            }
            private static void __EmployeeCourseAssignments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeCourseAssignment e)
            {
                d.EmployeeCourseAssignments_Deleted(e);
            }
            private static void __EmployeeCourseAssignments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeCourseAssignment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EmployeeCourseAssignments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeCourseAssignment, bool>> __EmployeeCourseAssignments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeCourseAssignment, bool>> filter = null;
                d.EmployeeCourseAssignments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeGroupCourseAssignment>
                __EmployeeGroupCourseAssignmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeGroupCourseAssignment>(
                    "EmployeeGroupCourseAssignments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroupCourseAssignments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroupCourseAssignments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroupCourseAssignments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroupCourseAssignments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroupCourseAssignments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroupCourseAssignments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroupCourseAssignments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroupCourseAssignments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroupCourseAssignments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroupCourseAssignments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroupCourseAssignments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroupCourseAssignments_Filter);
            private static bool __EmployeeGroupCourseAssignments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeGroupCourseAssignments_CanInsert(ref result);
                return result;
            }
            private static bool __EmployeeGroupCourseAssignments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeGroupCourseAssignments_CanUpdate(ref result);
                return result;
            }
            private static bool __EmployeeGroupCourseAssignments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeGroupCourseAssignments_CanDelete(ref result);
                return result;
            }
            private static bool __EmployeeGroupCourseAssignments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeGroupCourseAssignments_CanRead(ref result);
                return result;
            }
            private static void __EmployeeGroupCourseAssignments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroupCourseAssignment e)
            {
                d.EmployeeGroupCourseAssignments_Inserting(e);
            }
            private static void __EmployeeGroupCourseAssignments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroupCourseAssignment e)
            {
                d.EmployeeGroupCourseAssignments_Inserted(e);
            }
            private static void __EmployeeGroupCourseAssignments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroupCourseAssignment e)
            {
                d.EmployeeGroupCourseAssignments_Updating(e);
            }
            private static void __EmployeeGroupCourseAssignments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroupCourseAssignment e)
            {
                d.EmployeeGroupCourseAssignments_Updated(e);
            }
            private static void __EmployeeGroupCourseAssignments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroupCourseAssignment e)
            {
                d.EmployeeGroupCourseAssignments_Deleting(e);
            }
            private static void __EmployeeGroupCourseAssignments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroupCourseAssignment e)
            {
                d.EmployeeGroupCourseAssignments_Deleted(e);
            }
            private static void __EmployeeGroupCourseAssignments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroupCourseAssignment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EmployeeGroupCourseAssignments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeGroupCourseAssignment, bool>> __EmployeeGroupCourseAssignments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeGroupCourseAssignment, bool>> filter = null;
                d.EmployeeGroupCourseAssignments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeGroup>
                __EmployeeGroupsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeGroup>(
                    "EmployeeGroups",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroups_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroups_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroups_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroups_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroups_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroups_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroups_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroups_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroups_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroups_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroups_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeGroups_Filter);
            private static bool __EmployeeGroups_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeGroups_CanInsert(ref result);
                return result;
            }
            private static bool __EmployeeGroups_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeGroups_CanUpdate(ref result);
                return result;
            }
            private static bool __EmployeeGroups_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeGroups_CanDelete(ref result);
                return result;
            }
            private static bool __EmployeeGroups_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeGroups_CanRead(ref result);
                return result;
            }
            private static void __EmployeeGroups_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroup e)
            {
                d.EmployeeGroups_Inserting(e);
            }
            private static void __EmployeeGroups_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroup e)
            {
                d.EmployeeGroups_Inserted(e);
            }
            private static void __EmployeeGroups_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroup e)
            {
                d.EmployeeGroups_Updating(e);
            }
            private static void __EmployeeGroups_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroup e)
            {
                d.EmployeeGroups_Updated(e);
            }
            private static void __EmployeeGroups_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroup e)
            {
                d.EmployeeGroups_Deleting(e);
            }
            private static void __EmployeeGroups_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroup e)
            {
                d.EmployeeGroups_Deleted(e);
            }
            private static void __EmployeeGroups_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeGroup e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EmployeeGroups_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeGroup, bool>> __EmployeeGroups_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeGroup, bool>> filter = null;
                d.EmployeeGroups_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeJobRole>
                __EmployeeJobRolesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeJobRole>(
                    "EmployeeJobRoles",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeJobRoles_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeJobRoles_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeJobRoles_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeJobRoles_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeJobRoles_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeJobRoles_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeJobRoles_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeJobRoles_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeJobRoles_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeJobRoles_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeJobRoles_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeJobRoles_Filter);
            private static bool __EmployeeJobRoles_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeJobRoles_CanInsert(ref result);
                return result;
            }
            private static bool __EmployeeJobRoles_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeJobRoles_CanUpdate(ref result);
                return result;
            }
            private static bool __EmployeeJobRoles_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeJobRoles_CanDelete(ref result);
                return result;
            }
            private static bool __EmployeeJobRoles_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeJobRoles_CanRead(ref result);
                return result;
            }
            private static void __EmployeeJobRoles_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeJobRole e)
            {
                d.EmployeeJobRoles_Inserting(e);
            }
            private static void __EmployeeJobRoles_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeJobRole e)
            {
                d.EmployeeJobRoles_Inserted(e);
            }
            private static void __EmployeeJobRoles_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeJobRole e)
            {
                d.EmployeeJobRoles_Updating(e);
            }
            private static void __EmployeeJobRoles_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeJobRole e)
            {
                d.EmployeeJobRoles_Updated(e);
            }
            private static void __EmployeeJobRoles_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeJobRole e)
            {
                d.EmployeeJobRoles_Deleting(e);
            }
            private static void __EmployeeJobRoles_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeJobRole e)
            {
                d.EmployeeJobRoles_Deleted(e);
            }
            private static void __EmployeeJobRoles_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeJobRole e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EmployeeJobRoles_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeJobRole, bool>> __EmployeeJobRoles_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeJobRole, bool>> filter = null;
                d.EmployeeJobRoles_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>
                __EmployeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>(
                    "Employees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Filter);
            private static bool __Employees_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanInsert(ref result);
                return result;
            }
            private static bool __Employees_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanUpdate(ref result);
                return result;
            }
            private static bool __Employees_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanDelete(ref result);
                return result;
            }
            private static bool __Employees_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanRead(ref result);
                return result;
            }
            private static void __Employees_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserting(e);
            }
            private static void __Employees_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserted(e);
            }
            private static void __Employees_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updating(e);
            }
            private static void __Employees_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updated(e);
            }
            private static void __Employees_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleting(e);
            }
            private static void __Employees_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleted(e);
            }
            private static void __Employees_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Employees_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> __Employees_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter = null;
                d.Employees_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeTrainingRecord>
                __EmployeeTrainingRecordsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeTrainingRecord>(
                    "EmployeeTrainingRecords",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTrainingRecords_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTrainingRecords_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTrainingRecords_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTrainingRecords_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTrainingRecords_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTrainingRecords_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTrainingRecords_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTrainingRecords_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTrainingRecords_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTrainingRecords_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTrainingRecords_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTrainingRecords_Filter);
            private static bool __EmployeeTrainingRecords_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeTrainingRecords_CanInsert(ref result);
                return result;
            }
            private static bool __EmployeeTrainingRecords_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeTrainingRecords_CanUpdate(ref result);
                return result;
            }
            private static bool __EmployeeTrainingRecords_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeTrainingRecords_CanDelete(ref result);
                return result;
            }
            private static bool __EmployeeTrainingRecords_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeTrainingRecords_CanRead(ref result);
                return result;
            }
            private static void __EmployeeTrainingRecords_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTrainingRecord e)
            {
                d.EmployeeTrainingRecords_Inserting(e);
            }
            private static void __EmployeeTrainingRecords_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTrainingRecord e)
            {
                d.EmployeeTrainingRecords_Inserted(e);
            }
            private static void __EmployeeTrainingRecords_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTrainingRecord e)
            {
                d.EmployeeTrainingRecords_Updating(e);
            }
            private static void __EmployeeTrainingRecords_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTrainingRecord e)
            {
                d.EmployeeTrainingRecords_Updated(e);
            }
            private static void __EmployeeTrainingRecords_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTrainingRecord e)
            {
                d.EmployeeTrainingRecords_Deleting(e);
            }
            private static void __EmployeeTrainingRecords_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTrainingRecord e)
            {
                d.EmployeeTrainingRecords_Deleted(e);
            }
            private static void __EmployeeTrainingRecords_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTrainingRecord e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EmployeeTrainingRecords_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeTrainingRecord, bool>> __EmployeeTrainingRecords_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeTrainingRecord, bool>> filter = null;
                d.EmployeeTrainingRecords_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobRoleCourseAssignment>
                __JobRoleCourseAssignmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobRoleCourseAssignment>(
                    "JobRoleCourseAssignments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoleCourseAssignments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoleCourseAssignments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoleCourseAssignments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoleCourseAssignments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoleCourseAssignments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoleCourseAssignments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoleCourseAssignments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoleCourseAssignments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoleCourseAssignments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoleCourseAssignments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoleCourseAssignments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoleCourseAssignments_Filter);
            private static bool __JobRoleCourseAssignments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobRoleCourseAssignments_CanInsert(ref result);
                return result;
            }
            private static bool __JobRoleCourseAssignments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobRoleCourseAssignments_CanUpdate(ref result);
                return result;
            }
            private static bool __JobRoleCourseAssignments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobRoleCourseAssignments_CanDelete(ref result);
                return result;
            }
            private static bool __JobRoleCourseAssignments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobRoleCourseAssignments_CanRead(ref result);
                return result;
            }
            private static void __JobRoleCourseAssignments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRoleCourseAssignment e)
            {
                d.JobRoleCourseAssignments_Inserting(e);
            }
            private static void __JobRoleCourseAssignments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRoleCourseAssignment e)
            {
                d.JobRoleCourseAssignments_Inserted(e);
            }
            private static void __JobRoleCourseAssignments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRoleCourseAssignment e)
            {
                d.JobRoleCourseAssignments_Updating(e);
            }
            private static void __JobRoleCourseAssignments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRoleCourseAssignment e)
            {
                d.JobRoleCourseAssignments_Updated(e);
            }
            private static void __JobRoleCourseAssignments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRoleCourseAssignment e)
            {
                d.JobRoleCourseAssignments_Deleting(e);
            }
            private static void __JobRoleCourseAssignments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRoleCourseAssignment e)
            {
                d.JobRoleCourseAssignments_Deleted(e);
            }
            private static void __JobRoleCourseAssignments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRoleCourseAssignment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.JobRoleCourseAssignments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobRoleCourseAssignment, bool>> __JobRoleCourseAssignments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobRoleCourseAssignment, bool>> filter = null;
                d.JobRoleCourseAssignments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobRole>
                __JobRolesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobRole>(
                    "JobRoles",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoles_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoles_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoles_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoles_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoles_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoles_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoles_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoles_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoles_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoles_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoles_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobRoles_Filter);
            private static bool __JobRoles_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobRoles_CanInsert(ref result);
                return result;
            }
            private static bool __JobRoles_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobRoles_CanUpdate(ref result);
                return result;
            }
            private static bool __JobRoles_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobRoles_CanDelete(ref result);
                return result;
            }
            private static bool __JobRoles_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobRoles_CanRead(ref result);
                return result;
            }
            private static void __JobRoles_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRole e)
            {
                d.JobRoles_Inserting(e);
            }
            private static void __JobRoles_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRole e)
            {
                d.JobRoles_Inserted(e);
            }
            private static void __JobRoles_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRole e)
            {
                d.JobRoles_Updating(e);
            }
            private static void __JobRoles_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRole e)
            {
                d.JobRoles_Updated(e);
            }
            private static void __JobRoles_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRole e)
            {
                d.JobRoles_Deleting(e);
            }
            private static void __JobRoles_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRole e)
            {
                d.JobRoles_Deleted(e);
            }
            private static void __JobRoles_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobRole e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.JobRoles_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobRole, bool>> __JobRoles_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobRole, bool>> filter = null;
                d.JobRoles_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TrainingSessionAttendee>
                __TrainingSessionAttendeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TrainingSessionAttendee>(
                    "TrainingSessionAttendees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessionAttendees_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessionAttendees_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessionAttendees_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessionAttendees_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessionAttendees_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessionAttendees_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessionAttendees_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessionAttendees_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessionAttendees_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessionAttendees_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessionAttendees_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessionAttendees_Filter);
            private static bool __TrainingSessionAttendees_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingSessionAttendees_CanInsert(ref result);
                return result;
            }
            private static bool __TrainingSessionAttendees_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingSessionAttendees_CanUpdate(ref result);
                return result;
            }
            private static bool __TrainingSessionAttendees_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingSessionAttendees_CanDelete(ref result);
                return result;
            }
            private static bool __TrainingSessionAttendees_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingSessionAttendees_CanRead(ref result);
                return result;
            }
            private static void __TrainingSessionAttendees_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSessionAttendee e)
            {
                d.TrainingSessionAttendees_Inserting(e);
            }
            private static void __TrainingSessionAttendees_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSessionAttendee e)
            {
                d.TrainingSessionAttendees_Inserted(e);
            }
            private static void __TrainingSessionAttendees_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSessionAttendee e)
            {
                d.TrainingSessionAttendees_Updating(e);
            }
            private static void __TrainingSessionAttendees_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSessionAttendee e)
            {
                d.TrainingSessionAttendees_Updated(e);
            }
            private static void __TrainingSessionAttendees_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSessionAttendee e)
            {
                d.TrainingSessionAttendees_Deleting(e);
            }
            private static void __TrainingSessionAttendees_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSessionAttendee e)
            {
                d.TrainingSessionAttendees_Deleted(e);
            }
            private static void __TrainingSessionAttendees_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSessionAttendee e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TrainingSessionAttendees_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TrainingSessionAttendee, bool>> __TrainingSessionAttendees_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TrainingSessionAttendee, bool>> filter = null;
                d.TrainingSessionAttendees_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TrainingSession>
                __TrainingSessionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TrainingSession>(
                    "TrainingSessions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessions_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessions_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessions_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessions_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessions_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessions_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessions_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessions_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessions_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessions_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessions_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingSessions_Filter);
            private static bool __TrainingSessions_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingSessions_CanInsert(ref result);
                return result;
            }
            private static bool __TrainingSessions_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingSessions_CanUpdate(ref result);
                return result;
            }
            private static bool __TrainingSessions_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingSessions_CanDelete(ref result);
                return result;
            }
            private static bool __TrainingSessions_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingSessions_CanRead(ref result);
                return result;
            }
            private static void __TrainingSessions_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSession e)
            {
                d.TrainingSessions_Inserting(e);
            }
            private static void __TrainingSessions_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSession e)
            {
                d.TrainingSessions_Inserted(e);
            }
            private static void __TrainingSessions_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSession e)
            {
                d.TrainingSessions_Updating(e);
            }
            private static void __TrainingSessions_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSession e)
            {
                d.TrainingSessions_Updated(e);
            }
            private static void __TrainingSessions_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSession e)
            {
                d.TrainingSessions_Deleting(e);
            }
            private static void __TrainingSessions_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSession e)
            {
                d.TrainingSessions_Deleted(e);
            }
            private static void __TrainingSessions_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingSession e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TrainingSessions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TrainingSession, bool>> __TrainingSessions_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TrainingSession, bool>> filter = null;
                d.TrainingSessions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>
                __MyCoursesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Course>(
                    "MyCourses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyCourses_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyCourses_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyCourses_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyCourses_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyCourses_PreprocessQuery);
            private static bool __MyCourses_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyCourses_CanExecute(ref r);
                return r;
            }
            private static void __MyCourses_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyCourses_Executing();
            }
            private static void __MyCourses_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyCourses_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Course>)args[0]);
            }
            private static void __MyCourses_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyCourses_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyCourses_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Course> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Course>)args[0];
                d.MyCourses_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeTrainingRecord>
                __MyTrainingRecordsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeTrainingRecord>(
                    "MyTrainingRecords",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyTrainingRecords_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyTrainingRecords_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyTrainingRecords_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyTrainingRecords_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyTrainingRecords_PreprocessQuery);
            private static bool __MyTrainingRecords_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyTrainingRecords_CanExecute(ref r);
                return r;
            }
            private static void __MyTrainingRecords_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyTrainingRecords_Executing();
            }
            private static void __MyTrainingRecords_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyTrainingRecords_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EmployeeTrainingRecord>)args[0]);
            }
            private static void __MyTrainingRecords_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyTrainingRecords_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyTrainingRecords_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeTrainingRecord> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeTrainingRecord>)args[0];
                d.MyTrainingRecords_PreprocessQuery(ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
